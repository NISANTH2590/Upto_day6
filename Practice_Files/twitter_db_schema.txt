CREATE TABLE UserAccount (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  Name varchar,
  username varchar UNIQUE NOT NULL,
  password varchar,
  BirthDate date,
  category varchar,
  phonenumber int UNIQUE NOT NULL,
  profilepicture_url varchar,
  bio varchar,
  website varchar,
  Location varchar,
  verified boolean,
  createdAt timestamp,
  two_auth boolean
);

CREATE TABLE Tweets (
  tweet_id INT GENERATED BY DEFAULT AS IDENTITY,
  tweet_user_id int PRIMARY KEY,
  tweet_content varchar,
  like INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  retweet INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  reply INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  views INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  createdAt timestamp
);

CREATE TABLE replies (
  reply_count INT GENERATED BY DEFAULT AS IDENTITY,
  tweet_id int,
  user_id int,
  reply_content varchar,
  mention_id int,
  like INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  retweet INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  reply INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  views INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  createdAt timestamp
);

CREATE TABLE likedby (
  tweet_id int,
  user_id int
);

CREATE TABLE retweet (
  tweet_id int,
  user_id int
);

CREATE TABLE quote_tweet (
  tweet_id int,
  user_id int
);

CREATE TABLE Twittercircle (
  count INT GENERATED BY DEFAULT AS IDENTITY,
  user_id int,
  friend_id int
);

CREATE TABLE Loginactivity (
  login_count INT GENERATED BY DEFAULT AS IDENTITY,
  user_id int,
  login_time timestamp
);

CREATE TABLE trending (
  Tweets_id int,
  Tweet_hashtag varchar
);

CREATE TABLE Hashtag (
  Hashtag_count INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  hashtag_content varchar NOT NULL,
  Tweets_id int
);

CREATE TABLE Not_interested (
  Tweet_count INT GENERATED BY DEFAULT AS IDENTITY,
  Tweets_id int
);

CREATE TABLE tweet_analytics (
  tweet_id int,
  reply_count int,
  impressions INT GENERATED BY DEFAULT AS IDENTITY,
  engagements INT GENERATED BY DEFAULT AS IDENTITY,
  Detail_expands INT GENERATED BY DEFAULT AS IDENTITY,
  new_follower INT GENERATED BY DEFAULT AS IDENTITY,
  Profile_visits INT GENERATED BY DEFAULT AS IDENTITY
);

CREATE TABLE Topics (
  categories_id INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  category varchar,
  topics_id INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  topics varchar
);

CREATE TABLE notifications (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tweet_id int,
  verified_id int,
  mentions int
);

CREATE TABLE Bookmarks (
  bookmark_count INT GENERATED BY DEFAULT AS IDENTITY,
  bookmark_id int,
  createdAt timestamp,
  PRIMARY KEY (bookmark_count, bookmark_id)
);

CREATE TABLE Lists (
  Lists_id int,
  List_Name varchar,
  List_Description varchar,
  List_Profilepic_url varchar,
  List_private boolean,
  Members_count INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  Members_id int,
  tweet_id int,
  suggested varchar,
  PRIMARY KEY (Members_count, Members_id, tweet_id, suggested)
);

CREATE TABLE Mentions (
  mention_id INT GENERATED BY DEFAULT AS IDENTITY,
  user_id int,
  username varchar,
  PRIMARY KEY (mention_id, user_id)
);

CREATE TABLE professional_profile (
  profile_count INT GENERATED BY DEFAULT AS IDENTITY,
  user_id int,
  description varchar NOT NULL,
  category varchar,
  Address varchar NOT NULL,
  Hours int,
  email varchar,
  account_type int,
  impressions INT GENERATED BY DEFAULT AS IDENTITY,
  engagement_rate INT GENERATED BY DEFAULT AS IDENTITY,
  Profile_visits INT GENERATED BY DEFAULT AS IDENTITY,
  Link_clicks INT GENERATED BY DEFAULT AS IDENTITY,
  PRIMARY KEY (profile_count, user_id, account_type)
);

CREATE TABLE media (
  media_id INT GENERATED BY DEFAULT AS IDENTITY,
  Tweet_media_id int,
  media_url varchar,
  gif_id INT GENERATED BY DEFAULT AS IDENTITY,
  gif_name varchar,
  gif_url varchar,
  emoji_url varchar,
  emoji_id INT GENERATED BY DEFAULT AS IDENTITY,
  choice1 varchar,
  choice2 varchar,
  poll_length_day int,
  poll_length_hours int,
  poll_length_minutes int,
  createdAt timestamp,
  PRIMARY KEY (media_id, Tweet_media_id)
);

CREATE TABLE Message (
  Messages_id INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  from_id int,
  to_id int,
  likes INT GENERATED BY DEFAULT AS IDENTITY DEFAULT 0,
  media int,
  tweet_id int,
  message_content varchar,
  createdAt timestamp,
  PRIMARY KEY (from_id, to_id, media, tweet_id)
);

CREATE TABLE follow (
  followers_id int,
  following_id int,
  PRIMARY KEY (followers_id, following_id)
);

CREATE TABLE Topics_UserAccount (
  Topics_category varchar,
  UserAccount_category varchar,
  PRIMARY KEY (Topics_category, UserAccount_category)
);

ALTER TABLE Topics_UserAccount ADD FOREIGN KEY (Topics_category) REFERENCES Topics (category);

ALTER TABLE Topics_UserAccount ADD FOREIGN KEY (UserAccount_category) REFERENCES UserAccount (category);


ALTER TABLE Tweets ADD FOREIGN KEY (tweet_user_id) REFERENCES UserAccount (id);

ALTER TABLE replies ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE replies ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE replies ADD FOREIGN KEY (mention_id) REFERENCES UserAccount (id);

ALTER TABLE likedby ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE likedby ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE retweet ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE retweet ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE quote_tweet ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE quote_tweet ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE Twittercircle ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE Twittercircle ADD FOREIGN KEY (friend_id) REFERENCES UserAccount (id);

ALTER TABLE Loginactivity ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE trending ADD FOREIGN KEY (Tweets_id) REFERENCES Tweets (tweet_id);

ALTER TABLE trending ADD FOREIGN KEY (Tweet_hashtag) REFERENCES Hashtag (Hashtag_count);

ALTER TABLE Hashtag ADD FOREIGN KEY (hashtag_content) REFERENCES Tweets (tweet_content);

ALTER TABLE Hashtag ADD FOREIGN KEY (hashtag_content) REFERENCES replies (reply_content);

ALTER TABLE Hashtag ADD FOREIGN KEY (Tweets_id) REFERENCES Tweets (tweet_id);

ALTER TABLE Not_interested ADD FOREIGN KEY (Tweets_id) REFERENCES Tweets (tweet_id);

ALTER TABLE tweet_analytics ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE tweet_analytics ADD FOREIGN KEY (reply_count) REFERENCES replies (reply_count);

ALTER TABLE notifications ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE notifications ADD FOREIGN KEY (verified_id) REFERENCES UserAccount (id);

ALTER TABLE notifications ADD FOREIGN KEY (mentions) REFERENCES Mentions (user_id);

ALTER TABLE Bookmarks ADD FOREIGN KEY (bookmark_id) REFERENCES Tweets (tweet_id);

ALTER TABLE Lists ADD FOREIGN KEY (Members_id) REFERENCES UserAccount (id);

ALTER TABLE Lists ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE Lists ADD FOREIGN KEY (suggested) REFERENCES Lists (List_Name);

ALTER TABLE Mentions ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

ALTER TABLE professional_profile ADD FOREIGN KEY (user_id) REFERENCES UserAccount (id);

CREATE TABLE Topics_professional_profile (
  Topics_category varchar,
  professional_profile_category varchar,
  PRIMARY KEY (Topics_category, professional_profile_category)
);

ALTER TABLE Topics_professional_profile ADD FOREIGN KEY (Topics_category) REFERENCES Topics (category);

ALTER TABLE Topics_professional_profile ADD FOREIGN KEY (professional_profile_category) REFERENCES professional_profile (category);


ALTER TABLE media ADD FOREIGN KEY (Tweet_media_id) REFERENCES Tweets (tweet_id);

ALTER TABLE Message ADD FOREIGN KEY (from_id) REFERENCES UserAccount (id);

ALTER TABLE Message ADD FOREIGN KEY (to_id) REFERENCES UserAccount (id);

ALTER TABLE Message ADD FOREIGN KEY (media) REFERENCES media (media_id);

ALTER TABLE Message ADD FOREIGN KEY (tweet_id) REFERENCES Tweets (tweet_id);

ALTER TABLE follow ADD FOREIGN KEY (followers_id) REFERENCES UserAccount (id);

ALTER TABLE follow ADD FOREIGN KEY (following_id) REFERENCES UserAccount (id);